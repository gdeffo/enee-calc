{"version":3,"sources":["utils/index.ts","App.tsx","ErrorBoundary.tsx","index.tsx"],"names":["cursedAddition","exp","operand","cursedAddOperator","RegExp","replace","nerd","set","App","useState","setExp","sol","setSol","loading","setLoading","error","setError","useEffect","ktex","render","document","getElementById","className","style","maxWidth","name","message","id","type","onChange","target","value","placeholder","aria-label","aria-describedby","onClick","setTimeout","evaluate","text","err","console","log","content","minHeight","role","ErrorBoundary","props","state","hasError","this","children","Component","ReactDOM","StrictMode"],"mappings":"gQACaA,EAAiB,SAACC,GAC3B,IAGMC,EAAO,aAHO,qBAGP,YADI,cACJ,YAFG,gBAEH,qBAHO,qBAGP,YADI,cACJ,YAFG,gBAEH,OACPC,EAAoB,IAAIC,OAAJ,WAAeF,EAAf,mBAAiCA,EAAjC,KAA6C,KAGvE,OADeD,EAAII,QAAQF,EAAmB,+BCFlDG,IAAKC,IAAI,YAAa,KA4DPC,MA1Df,WAAgB,IAAD,EAESC,mBAAiB,IAF1B,mBAENR,EAFM,KAEDS,EAFC,OAGSD,mBAAiB,IAH1B,mBAGNE,EAHM,KAGDC,EAHC,OAIiBH,oBAAkB,GAJnC,mBAINI,EAJM,KAIGC,EAJH,OAKaL,mBAAuB,MALpC,mBAKNM,EALM,KAKCC,EALD,KAkCb,OA3BAC,qBAAU,WACR,IACEC,IAAKC,OAAOR,EAAKS,SAASC,eAAe,WACzC,MAAON,GAEP,YADAC,EAASD,GAGXC,EAAS,QACR,CAACL,IAoBF,oCACE,0BAAMW,UAAU,sDACd,yBAAKA,UAAU,uCAAuCC,MAAO,CAAEC,SAAU,MACtET,GAAS,yBAAKO,UAAU,8BAAf,iBAAgDP,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAOU,KAAvD,oBAAgEV,QAAhE,IAAgEA,OAAhE,EAAgEA,EAAOW,UACjF,yBAAKC,GAAG,YACR,yBAAKL,UAAU,oBACb,2BAAOM,KAAK,OAAON,UAAU,eAAeO,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAOoB,EAAOC,QAAQC,YAAY,aAAaC,aAAW,WAAWC,mBAAiB,iBAC5J,yBAAKZ,UAAU,sBACb,0BAAMA,UAAU,mBAAmBK,GAAG,gBAAtC,YAGJ,4BAAQL,UAAU,4BAA4Ba,QA7BtD,WACErB,GAAW,GACXsB,YAAW,WACT,IACElB,IAAKC,OAAOnB,EAAeC,GAAMmB,SAASC,eAAe,YACzDT,EAAON,IAAKN,EAAeC,IAAMoC,WAAWC,QAC5C,MAAOC,GAIP,OAHAzB,GAAW,GACXE,EAASuB,QACTC,QAAQC,IAAIF,GAGdzB,GAAW,GACXE,EAAS,WAgBL,aAA0E,oCAC1E,yBAAKM,UAAU,2BAA2BC,MAAO,CAAEmB,QAAS,SAAUC,UAAW,IAAMhB,GAAG,WAEzFd,GAAW,yBAAKS,UAAU,yBAAyBsB,KAAK,UACvD,0BAAMtB,UAAU,WAAhB,uB,4BClDSuB,E,kDACjB,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IACDC,MAAQ,CACTC,UAAU,EACVjC,MAAO,MAJS,E,8DAaNA,M,+BAKd,GAAIkC,KAAKF,MAAMC,SAAU,CAAC,IAAD,IAGfvB,EAAI,UAAGwB,KAAKF,MAAMhC,aAAd,aAAG,EAAkBU,KACzBC,EAAO,UAAGuB,KAAKF,MAAMhC,aAAd,aAAG,EAAkBW,QAClC,OACI,yBAAKJ,UAAU,6BACX,yBAAKA,UAAU,8BAAf,UAAgDG,EAAhD,aAAyDC,KAKrE,OAAOuB,KAAKH,MAAMI,Y,gDAtBUnC,GAE5B,MAAO,CAAEiC,UAAU,EAAMjC,a,GAXUoC,aCF3CC,IAASjC,OACP,kBAAC,IAAMkC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJjC,SAASC,eAAe,W","file":"static/js/main.2326eeaa.chunk.js","sourcesContent":["\nexport const cursedAddition = (exp: string): string => {\n    const numberRegex = \"-?\\\\d+(?:\\\\.\\\\d+)?\";\n    const inParen = \"\\\\([^\\\\(]*\\\\)\";\n    const variable = \"-?[a-zA-Z]+\";\n    const operand = `(?:${numberRegex}|${variable}|${inParen})(?:\\\\^(?:${numberRegex}|${variable}|${inParen}))?`;\n    const cursedAddOperator = new RegExp(`(${operand})\\\\/\\\\/(${operand})`, \"g\");\n\n    const result = exp.replace(cursedAddOperator, \"($1) * ($2) /(($1) + ($2))\")\n    return result;\n}","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport nerd from \"nerdamer\";\nimport \"nerdamer\"\nimport ktex from \"katex\";\nimport { cursedAddition } from './utils';\n\nnerd.set(\"IMAGINARY\", \"j\");\n\nfunction App() {\n\n  const [exp, setExp] = useState<string>(\"\");\n  const [sol, setSol] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    try {\n      ktex.render(sol, document.getElementById(\"output\") as HTMLElement);\n    } catch (error) {\n      setError(error)\n      return;\n    }\n    setError(null);\n  }, [sol]);\n\n  function showSol() {\n    setLoading(true)\n    setTimeout(() => {\n      try {\n        ktex.render(cursedAddition(exp), document.getElementById(\"showExp\") as HTMLElement);\n        setSol(nerd(cursedAddition(exp)).evaluate().text())\n      } catch (err) {\n        setLoading(false)\n        setError(err)\n        console.log(err)\n        return;\n      }\n      setLoading(false)\n      setError(null)\n    })\n  }\n\n  return (\n    <>\n      <main className=\"container d-flex mt-5 p-5 border-right border-left\">\n        <div className=\"mx-auto d-flex flex-column flex-wrap\" style={{ maxWidth: 600 }}>\n          {error && <div className=\"alert alert-danger mx-auto\">{`${error?.name}: ${error?.message}`}</div>}\n          <pre id=\"showExp\"></pre>\n          <div className=\"input-group mb-3\">\n            <input type=\"text\" className=\"form-control\" onChange={({ target }) => setExp(target.value)} placeholder=\"impedances\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">&#x2126;</span>\n            </div>\n          </div>\n          <button className=\"btn btn-block btn-primary\" onClick={showSol}>Evaluate Z<sub>eq</sub></button>\n          <pre className=\"output border mt-3 w-100\" style={{ content: \"sadlfj\", minHeight: 50 }} id=\"output\" >\n          </pre>\n          {loading && <div className=\"spinner-border mx-auto\" role=\"status\">\n            <span className=\"sr-only\">Calculating...</span>\n          </div>}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\ntype State = {\n    hasError: boolean\n    error: Error | null\n    [key: string]: any\n}\n\nexport default class ErrorBoundary extends Component<{}, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null,\n        };\n    }\n\n    static getDerivedStateFromError(error: Error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true, error };\n    }\n\n    componentDidCatch(error: Error) {\n        // You can also log the error to an error reporting service\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            // return <h1>Something went wrong.</h1>;\n            const name = this.state.error?.name;\n            const message = this.state.error?.message;\n            return (\n                <div className=\"container d-flex p-5 mt-5\">\n                    <div className=\"alert alert-danger mx-auto\">{`${name}: ${message}`}</div>\n                </div>\n            )\n        }\n\n        return this.props.children;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ErrorBoundary from './ErrorBoundary';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}